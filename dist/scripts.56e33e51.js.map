{"version":3,"sources":["../../js/player.js","../../js/scripts.js"],"names":["gameBoard","document","getElementById","playerPlay","colorSelected","el","push","removePlayerListeners","wellPlayed","every","v","i","match","length","console","log","addPlayerListeners","confirm","splice","alert","handleClick","e","target","classList","contains","colors","forEach","remove","removeEventListener","capture","add","addEventListener","Array","from","children","index","difficult","transitionend","getRandom","Math","floor","random","oneMoreRound","fill","removeClasses","addClass","magicNumber","addCPUEvents","main","handleCPUEvents","window","removeCPUEvents"],"mappings":"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","file":"scripts.56e33e51.js","sourceRoot":"..\\src\\views\\pages","sourcesContent":["import { colors, match, addCPUEvents, removeCPUEvents, oneMoreRound, main } from './scripts'\r\nconst gameBoard = document.getElementById('colors-container')\r\n\r\nconst playerPlay = []\r\n\r\nconst colorSelected = (el) => {\r\n  playerPlay.push(el)\r\n  removePlayerListeners()\r\n  const wellPlayed = playerPlay.every((v, i) => v === match[i])\r\n  if(wellPlayed){\r\n    if (playerPlay.length === match.length){\r\n      console.log('Ganaste!')\r\n      oneMoreRound()\r\n      addCPUEvents()\r\n    }else {\r\n      addPlayerListeners()\r\n    }\r\n  }else {\r\n    if(confirm('¡Fallaste! \\n ¿Jugar otra vez?')){\r\n      playerPlay.splice(0)\r\n      addCPUEvents()\r\n      main()\r\n    }else {\r\n      alert('Hasta la próxima!')\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst handleClick = (e) => {\r\n  if (e.target.classList.contains('colors')) {\r\n    switch (e.target.classList[1]) {\r\n      case 'color-a':\r\n        colorSelected(0)\r\n        break\r\n      case 'color-b':\r\n        colorSelected(1)\r\n        break\r\n      case 'color-c':\r\n        colorSelected(2)\r\n        break\r\n      case 'color-d':\r\n        colorSelected(3)\r\n        break\r\n    }\r\n  }\r\n}\r\n\r\nconst removePlayerListeners = () => {\r\n  colors.forEach((el) => el.classList.remove('player-turn'))\r\n  gameBoard.removeEventListener('click', handleClick, { capture: true })\r\n}\r\n\r\nconst addPlayerListeners = () => {\r\n  colors.forEach((el) => el.classList.add('player-turn'))\r\n  gameBoard.addEventListener('click', handleClick, { capture: true })\r\n}\r\n\r\nexport { playerPlay, addPlayerListeners }\r\n","import { playerPlay, addPlayerListeners } from './player'\r\nconst gameBoard = document.getElementById('colors-container')\r\nconst colors = Array.from(gameBoard.children)\r\nlet index = 0\r\nlet difficult = 1\r\nconst transitionend = [false, false]\r\n\r\nconst getRandom = () => {\r\n  return Math.floor(Math.random() * 4)\r\n}\r\n\r\nconst match = [getRandom(), getRandom()]\r\n\r\nconst oneMoreRound = () => {\r\n  match.push(...Array(difficult).fill(getRandom()))\r\n}\r\n\r\nconst removeClasses = () => {\r\n  colors.forEach((el) => el.classList.remove('active'))\r\n}\r\n\r\nconst addClass = () => {\r\n  if (index < match.length) {\r\n    const magicNumber = match[index]\r\n    colors[magicNumber].classList.add('active')\r\n    index++\r\n  } else {\r\n    index = 0\r\n    if(confirm('otra?')){\r\n      oneMoreRound()\r\n      addCPUEvents()\r\n      main()\r\n    }\r\n    // addPlayerListeners()\r\n  }\r\n}\r\n\r\nconst main = () => {\r\n  transitionend.fill(false)\r\n  addClass()\r\n}\r\n\r\nconst handleCPUEvents = () => {\r\n  //First end\r\n  if (!transitionend[0]) {\r\n    transitionend[0] = true\r\n    removeClasses()\r\n  }\r\n  //Second end\r\n  else if (!transitionend[1]) {\r\n    transitionend[1] = true\r\n    main()\r\n  }\r\n}\r\n\r\nconst addCPUEvents = () => {\r\n  gameBoard.addEventListener('transitionend', handleCPUEvents, {\r\n    capture: false,\r\n  })\r\n  window.addEventListener('load', main, { capture: false })\r\n}\r\n\r\nconst removeCPUEvents = () => {\r\n  gameBoard.removeEventListener('transitionend', handleCPUEvents, {\r\n    capture: false,\r\n  })\r\n  window.removeEventListener('load', main, { capture: false })\r\n}\r\n\r\naddCPUEvents()\r\n\r\nexport { colors, match, addCPUEvents, removeCPUEvents, oneMoreRound, main, index }\r\n"]}