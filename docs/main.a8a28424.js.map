{"version":3,"sources":["../../../node_modules/regenerator-runtime/runtime.js","../../../node_modules/@babel/runtime/regenerator/index.js","../../../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../../../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../../../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../../../node_modules/@babel/runtime/helpers/iterableToArray.js","../../../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../../../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../../../node_modules/@babel/runtime/helpers/toConsumableArray.js","../../js/data.js","../../js/audio.js","../../js/main.js"],"names":["testPlayers","player","difficulty","score","time","Date","getPlayerData","playerData","sessionStorage","getItem","JSON","parse","newSession","setItem","stringify","setPlayerData","diff","getRanking","dataJson","localStorage","orderedPlayers","sort","a","b","setRanking","savedPlayers","topPlayers","slice","sumScore","colorsAudio","audio","Audio","A","B","C","D","colorAudioPlay","colorClicked","forEach","pause","currentTime","play","sectionAudio","sectionfail","sectionpass","sectionAudioPlay","index","gameBoard","document","getElementById","colors","Array","from","children","form","playersList","match","playerPlay","getRandom","Math","floor","random","logout","clonedEl","cloneNode","main","innerHTML","showLogout","userRegister","showRanking","reset","r","removeAttribute","submit","textContent","setAttribute","validate","name","handleChange","playerName","value","length","console","log","removeChangeEvent","removeEventListener","addEventListener","e","preventDefault","once","click","undefined","handleSubmit","removeSubmitEvent","start","clear","push","animateCPU","addClickListener","animate","Promise","resolve","reject","classList","remove","contains","setTimeout","add","v","handleClick","target","removeClickListener","goodClick","i","clicked","selectedByNum","indexOf","every","nextRound","youLose","playsLeft","what","splice","res","removeItem","replaceWith","players","playerDate","fragment","createDocumentFragment","timeOptions","hour","minute","dateOptions","month","day","tr","createElement","tdRank","tdPlayer","tdDiff","tdScore","tdTime","toLocaleTimeString","toLocaleDateString","append","appendChild"],"mappings":"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","file":"main.a8a28424.js","sourceRoot":"..\\src\\views\\pages","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","const testPlayers = [\r\n  {\r\n    player: 'xXJuanXx',\r\n    difficulty: 'maniac',\r\n    score: 1500,\r\n    time: new Date('2020-07-06T12:43:09'),\r\n  },\r\n  {\r\n    player: '_Alex_',\r\n    difficulty: 'hard',\r\n    score: 800,\r\n    time: new Date('2020-12-13T13:33:09'),\r\n  },\r\n  {\r\n    player: 'Bot96',\r\n    difficulty: 'normal',\r\n    score: 500,\r\n    time: new Date('2020-10-28T17:50:09'),\r\n  },\r\n  {\r\n    player: 'Player123',\r\n    difficulty: 'hard',\r\n    score: 300,\r\n    time: new Date('2020-01-15T22:07:09'),\r\n  },\r\n  {\r\n    player: 'Vegetta777',\r\n    difficulty: 'maniac',\r\n    score: 150,\r\n    time: new Date('2020-02-03T10:30:09'),\r\n  },\r\n  {\r\n    player: 'Clementine',\r\n    difficulty: 'normal',\r\n    score: 100,\r\n    time: new Date('2020-11-14T04:43:09'),\r\n  },\r\n  {\r\n    player: 'Albedo',\r\n    difficulty: 'hard',\r\n    score: 100,\r\n    time: new Date('2020-07-25T08:40:09'),\r\n  },\r\n  {\r\n    player: 'Nabe',\r\n    difficulty: 'normal',\r\n    score: 50,\r\n    time: new Date('2020-04-17T10:00:09'),\r\n  },\r\n  {\r\n    player: 'Shalltear',\r\n    difficulty: 'normal',\r\n    score: 50,\r\n    time: new Date('2020-08-01T01:09:09'),\r\n  },\r\n  {\r\n    player: 'OoLeiaoO',\r\n    difficulty: 'normal',\r\n    score: 50,\r\n    time: new Date('2020-01-13T04:43:09'),\r\n  }\r\n]\r\n\r\nexport const getPlayerData = () => {\r\n  const playerData = sessionStorage.getItem('simonPlayer')\r\n\r\n  if (playerData) return JSON.parse(playerData)\r\n  else {\r\n    const newSession = {\r\n      player: '',\r\n      difficulty: '',\r\n      score: 0,\r\n      time: '',\r\n    }\r\n    sessionStorage.setItem('simonPlayer', JSON.stringify(newSession))\r\n    return newSession\r\n  }\r\n}\r\n \r\nexport const setPlayerData = (player, diff, time) => {\r\n  const playerData = getPlayerData()\r\n\r\n  if(player) playerData.player = player\r\n  if(diff) playerData.difficulty = diff\r\n  if(time) playerData.time = time\r\n\r\n  sessionStorage.setItem('simonPlayer', JSON.stringify(playerData))\r\n}\r\n\r\n//Busca los datos almacenados y de no encontrarlos almacena los de prueba\r\nexport const getRanking = () => {\r\n  const dataJson = localStorage.getItem('simonRanking')\r\n\r\n  if(dataJson) return JSON.parse(dataJson)\r\n  else {\r\n    const orderedPlayers = testPlayers.sort((a, b)=> b.score - a.score)\r\n    localStorage.setItem('simonRanking', JSON.stringify(orderedPlayers))\r\n    return orderedPlayers\r\n  }\r\n}\r\n\r\nexport const setRanking = () => {\r\n  const savedPlayers = getRanking()\r\n  const playerData = getPlayerData()\r\n  const allPlayers = [...savedPlayers, playerData]\r\n  const orderedPlayers = allPlayers.sort((a, b)=> b.score - a.score)\r\n  const topPlayers = orderedPlayers.slice(0,10)\r\n\r\n  localStorage.setItem('simonRanking', JSON.stringify(topPlayers))\r\n}\r\n\r\nexport const sumScore = (score) => {\r\n  const playerData = getPlayerData()\r\n\r\n  if(score) playerData.score+=score\r\n  else playerData.score = 0\r\n\r\n  sessionStorage.setItem('simonPlayer', JSON.stringify(playerData))\r\n}","import { A, B, C, D, sectionpass, sectionfail } from '../assets/sound/*.flac'\r\n\r\nconst colorsAudio = [\r\n  {audio: new Audio(A)},\r\n  {audio: new Audio(B)},\r\n  {audio: new Audio(C)},\r\n  {audio: new Audio(D)}\r\n]\r\n\r\nexport const colorAudioPlay = (colorClicked) => {\r\n  colorsAudio.forEach(a=>a.audio.pause())\r\n  colorsAudio.forEach(a=>a.audio.currentTime = 0)\r\n  colorsAudio[colorClicked].audio.play()\r\n}\r\n\r\nconst sectionAudio = [\r\n  {audio: new Audio(sectionfail)},\r\n  {audio: new Audio(sectionpass)}\r\n]\r\n\r\nexport const sectionAudioPlay = (index) => {\r\n  sectionAudio[index].audio.play()\r\n}\r\n","import { getPlayerData, setPlayerData, getRanking, setRanking, sumScore } from './data'\r\nimport { colorAudioPlay, sectionAudioPlay } from './audio'\r\n\r\nconst gameBoard = document.getElementById('colors-container')\r\nconst colors = Array.from(gameBoard.children)\r\nconst form = document.getElementById('ingame-form')\r\nconst playersList = document.getElementById('players-list')\r\nconst match = []\r\nconst playerPlay = []\r\nconst getRandom = () => Math.floor(Math.random() * 4)\r\nconst logout = document.getElementById('logout')\r\nconst clonedEl = form.children[0].cloneNode(true)\r\n\r\nconst main = () => {\r\n  if(sessionStorage.getItem('simonPlayer')){\r\n    form.children[0].innerHTML = \r\n      `<p class=\"form__player-name\">${getPlayerData().player}<p>`\r\n    showLogout()\r\n    play()\r\n  } else userRegister()\r\n\r\n  showRanking()\r\n}\r\n\r\nconst userRegister = () => {\r\n  form.reset()\r\n  form.difficulty.forEach(r=> r.removeAttribute('disabled'))\r\n  form.submit.textContent = 'Save'\r\n  form.submit.setAttribute('disabled', 'true')\r\n  const validate = {\r\n    name: \"\",\r\n    diff: \"\"\r\n  }\r\n\r\n  const handleChange = () => {\r\n    const playerName = form.player.value\r\n    const diff = form.difficulty.value\r\n\r\n    if (playerName) {\r\n      if (playerName.length < 10) {\r\n        validate.name = playerName\r\n      } else {\r\n        console.log('Name too long')\r\n        validate.name = ''\r\n      }\r\n    } else {\r\n      validate.name = ''\r\n    }\r\n\r\n    if (diff === 'normal' || diff === 'hard' || diff === 'maniac') {\r\n      validate.diff = diff\r\n    } else {\r\n      validate.diff = ''\r\n    }\r\n\r\n    if (validate.name && validate.diff) {\r\n      form.submit.removeAttribute('disabled')\r\n    } else {\r\n      form.submit.setAttribute('disabled', 'true')\r\n    }\r\n  }  \r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setPlayerData(validate.name, validate.diff)\r\n    form.children[0].innerHTML = `<p class=\"form__player-name\">${getPlayerData().player}<p>`\r\n    removeChangeEvent()\r\n    showLogout()\r\n    play()\r\n  }\r\n\r\n  const removeChangeEvent = () => form.removeEventListener('change', handleChange)\r\n  form.addEventListener('change', handleChange)\r\n  form.addEventListener('submit', handleSubmit, {once: true})\r\n}\r\n\r\n//Función para que el usuario pueda cambiar dificultad entre partidas\r\nconst play = () => {\r\n  if(!getPlayerData().difficulty) logout.click()\r\n  form.difficulty.value = getPlayerData().difficulty\r\n  form.submit.textContent = 'PLAY'\r\n  form.submit.removeAttribute('disabled')\r\n  form.difficulty.forEach(r=> r.removeAttribute('disabled'))\r\n\r\n  const handleChange = () => {\r\n    const diff = form.difficulty.value\r\n    if(diff === 'hard' || diff === 'maniac'){\r\n      setPlayerData(undefined, diff)      \r\n    }else {\r\n      form.difficulty.value = 'normal'\r\n      setPlayerData(undefined, 'normal')\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    form.submit.setAttribute('disabled', 'true')\r\n    form.difficulty.forEach(r=> r.setAttribute('disabled', 'true'))\r\n    removeChangeEvent()\r\n    removeSubmitEvent()\r\n    start()\r\n  }\r\n  \r\n  form.addEventListener('change', handleChange)\r\n  form.addEventListener('submit', handleSubmit)\r\n\r\n  const removeChangeEvent = () => form.removeEventListener('change', handleChange)\r\n  const removeSubmitEvent = () => form.removeEventListener('submit', handleSubmit)\r\n\r\n  logout.addEventListener('click', ()=> {\r\n    removeChangeEvent()\r\n    removeSubmitEvent()\r\n  })\r\n}\r\n\r\nconst start = async () => {\r\n  try{\r\n    clear('match')\r\n    switch (getPlayerData().difficulty) {\r\n      case 'hard':\r\n        match.push(getRandom(), getRandom())\r\n        break\r\n      case 'maniac':\r\n        match.push(getRandom(), getRandom(), getRandom())\r\n        break\r\n      case 'normal':\r\n      default:\r\n        match.push(getRandom())\r\n    }\r\n    await animateCPU()\r\n    addClickListener()\r\n  }catch(error){\r\n    console.log(error)\r\n  }\r\n}\r\n\r\n//Resuelve promesas al finalizar cada animación. Al acabar con todas, se resuelve la promesa contenedora\r\nconst animateCPU = async () => {\r\n  const animate = (index) => {\r\n    return new Promise((resolve, reject) => {\r\n        colors[index].addEventListener('transitionend', ()=> {\r\n          colors[index].classList.remove('game__color--active')\r\n          colorAudioPlay(index)\r\n          if(logout.classList.contains('logout--disabled')) reject('User has logged out')\r\n          else setTimeout(resolve, 300)\r\n        }, {once: true})\r\n      \r\n        colors[index].classList.add('game__color--active')\r\n    })\r\n  }\r\n  for (const v of match) {\r\n    await Promise.resolve(animate(v))\r\n  }\r\n}\r\n\r\nconst handleClick = (e) => {\r\n  if(e.target.classList.contains('game__color')){\r\n    removeClickListener()\r\n    goodClick(e.target)\r\n  }\r\n}\r\n\r\nconst addClickListener = () => {\r\n  gameBoard.addEventListener('click', handleClick)\r\n  colors.forEach((v, i) => i < 4 && v.classList.add('game__color--player-turn'))\r\n}\r\n\r\nconst removeClickListener = () => {\r\n  gameBoard.removeEventListener('click', handleClick)\r\n  colors.forEach((v, i) => i < 4 && v.classList.remove('game__color--player-turn'))\r\n}\r\n\r\nconst goodClick = (clicked) => {\r\n  const selectedByNum = colors.indexOf(clicked)\r\n  colorAudioPlay(selectedByNum)\r\n  playerPlay.push(selectedByNum)\r\n  const pass = playerPlay.every((v, i) => v === match[i])\r\n  pass ? nextRound() : youLose()\r\n}\r\n\r\nconst nextRound = () => {\r\n  const playsLeft = playerPlay < match ? true : false\r\n\r\n  if (playsLeft) addClickListener()\r\n  else {\r\n    switch(getPlayerData().difficulty){\r\n      case 'normal':\r\n        match.push(getRandom())\r\n        sumScore(50)\r\n        break\r\n      case 'hard':\r\n        match.push(getRandom(), getRandom())\r\n        sumScore(100)\r\n        break\r\n      case 'maniac':\r\n        match.push(getRandom(), getRandom(), getRandom())\r\n        sumScore(150)\r\n    }\r\n    sectionAudioPlay(1)\r\n    clear('round')\r\n  }\r\n}\r\n\r\nconst youLose = () => {\r\n  sectionAudioPlay(0)\r\n  setPlayerData(undefined, undefined, new Date())\r\n  setRanking()\r\n  showRanking()\r\n  play()\r\n}\r\n\r\nconst clear = async (what) => {\r\n  try {\r\n    if (what === 'round') {\r\n      playerPlay.splice(0)\r\n      await new Promise((res) => setTimeout(()=> res(), 600))\r\n      await animateCPU()\r\n      addClickListener()\r\n    } else if (what === 'match') {\r\n      playerPlay.splice(0)\r\n      match.splice(0)\r\n      sumScore()\r\n    }\r\n  }catch(error){\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nconst showLogout = () => {\r\n  logout.classList.remove('logout--disabled')\r\n  logout.addEventListener('click', ()=> {\r\n    sessionStorage.removeItem('simonPlayer')\r\n    form.children[0].replaceWith(clonedEl.cloneNode(true))\r\n    logout.classList.add('logout--disabled')\r\n    removeClickListener()\r\n    showRanking()\r\n    userRegister()\r\n  }, {once: true})\r\n}\r\n\r\nconst showRanking = () => {\r\n  const players = getRanking()\r\n  const fragment = document.createDocumentFragment()\r\n\r\n  const timeOptions = {\r\n    hour: 'numeric',\r\n    minute: '2-digit'\r\n  }\r\n  const dateOptions = {\r\n    month: \"short\",\r\n    day: \"numeric\"\r\n  }\r\n  let playerDate\r\n  if(sessionStorage.getItem('simonPlayer')){\r\n    playerDate = getPlayerData().time\r\n  }\r\n\r\n  players.forEach((v,i)=> {\r\n    const tr = document.createElement('tr')\r\n    const tdRank = document.createElement('td')\r\n    const tdPlayer = document.createElement('td')\r\n    const tdDiff = document.createElement('td')\r\n    const tdScore = document.createElement('td')\r\n    const tdTime = document.createElement('td')\r\n    tdRank.textContent = `#${i+1}`\r\n    tdPlayer.textContent = v.player\r\n    tdDiff.textContent = v.difficulty\r\n    tdScore.textContent = v.score\r\n    tdTime.textContent = `${new Date(v.time).toLocaleTimeString(undefined, timeOptions)} ${new Date(v.time).toLocaleDateString(undefined, dateOptions)}`\r\n    tr.classList.add('ranking__body--rows')\r\n    if(playerDate === v.time) tr.classList.add('active-row')\r\n    tdRank.classList.add('ranking__body')\r\n    tdPlayer.classList.add('ranking__body')\r\n    tdDiff.classList.add('ranking__body')\r\n    tdScore.classList.add('ranking__body')\r\n    tdTime.classList.add('ranking__body')\r\n\r\n    tr.append(tdRank, tdPlayer, tdDiff, tdScore, tdTime)\r\n    fragment.appendChild(tr)\r\n  })\r\n\r\n  playersList.innerHTML = ''\r\n  playersList.appendChild(fragment)\r\n}\r\n\r\nmain()"]}